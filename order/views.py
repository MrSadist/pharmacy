import requests
from django.conf import settings
from rest_framework import generics, permissions
from rest_framework.response import Response
from drf_yasg.utils import swagger_auto_schema
from drf_yasg import openapi
from .models import Order
from .serializers import OrderSerializer, OrderCreateSerializer

class CreateOrderAPI(generics.CreateAPIView):
    serializer_class = OrderCreateSerializer
    permission_classes = [permissions.IsAuthenticated]

    @swagger_auto_schema(
        operation_summary="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑",
        operation_description="–°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏–Ω–∏–º–∞—è –º–∞—Å—Å–∏–≤ ID –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram-–≥—Ä—É–ø–ø—É.",
        request_body=openapi.Schema(
            type=openapi.TYPE_OBJECT,
            required=["product_ids"],
            properties={
                "product_ids": openapi.Schema(
                    type=openapi.TYPE_ARRAY,
                    items=openapi.Schema(type=openapi.TYPE_INTEGER),
                    description="–ú–∞—Å—Å–∏–≤ ID –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
                )
            },
            example={
                "product_ids": [1, 2]
            }
        ),
        responses={
            201: openapi.Response(
                description="–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
                schema=openapi.Schema(
                    type=openapi.TYPE_OBJECT,
                    properties={
                        "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –∑–∞–∫–∞–∑–∞"),
                        "user": openapi.Schema(
                            type=openapi.TYPE_OBJECT,
                            properties={
                                "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                "email": openapi.Schema(type=openapi.TYPE_STRING, format="email", description="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                "surname": openapi.Schema(type=openapi.TYPE_STRING, description="–§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                "phone_number": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                "avatar": openapi.Schema(type=openapi.TYPE_STRING, format="uri", description="URL –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                            }
                        ),
                        "products": openapi.Schema(
                            type=openapi.TYPE_ARRAY,
                            items=openapi.Schema(
                                type=openapi.TYPE_OBJECT,
                                properties={
                                    "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                    "title": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                    "description_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "description_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "description_en": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "instruction_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "instruction_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "instruction_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                    "price": openapi.Schema(type=openapi.TYPE_INTEGER, description="–¶–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                    "old_price": openapi.Schema(type=openapi.TYPE_INTEGER, nullable=True, description="–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å null)"),
                                    "category": openapi.Schema(
                                        type=openapi.TYPE_OBJECT,
                                        properties={
                                            "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                            "parent": openapi.Schema(
                                                type=openapi.TYPE_OBJECT,
                                                nullable=True,
                                                properties={
                                                    "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                                    "parent": openapi.Schema(type=openapi.TYPE_OBJECT, nullable=True, description="–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                                    "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ"),
                                                    "name_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                    "name_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                    "name_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
                                                },
                                                description="–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å null)"
                                            ),
                                            "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ"),
                                            "name_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                            "name_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                            "name_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
                                        },
                                        description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
                                    ),
                                    "link": openapi.Schema(
                                        type=openapi.TYPE_ARRAY,
                                        items=openapi.Schema(type=openapi.TYPE_STRING),
                                        nullable=True,
                                        description="–°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)"
                                    ),
                                    "total": openapi.Schema(type=openapi.TYPE_INTEGER, description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                    "new": openapi.Schema(type=openapi.TYPE_BOOLEAN, nullable=True, description="–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–¥—É–∫—Ç –Ω–æ–≤—ã–º (–º–æ–∂–µ—Ç –±—ã—Ç—å null)")
                                }
                            ),
                            description="–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∑–∞–∫–∞–∑–µ"
                        ),
                        "created_at": openapi.Schema(type=openapi.TYPE_STRING, format="date-time", description="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"),
                        "status": openapi.Schema(type=openapi.TYPE_STRING, description="–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
                    }
                )
            ),
            400: "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        }
    )
    def post(self, request, *args, **kwargs):
        serializer = self.get_serializer(data=request.data, context={'request': request})
        serializer.is_valid(raise_exception=True)
        order = serializer.save()

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
        user = request.user
        products = order.products.all()
        total_price = sum(product.price for product in products)
        product_list = "\n".join([f"- {product.title} (ID: {product.id}, Price: {product.price})" for product in products])
        message = (
            f"<b>üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}</b>\n\n"
            f"<b>üë§ –ö–ª–∏–µ–Ω—Ç:</b> {user.name} {user.surname}\n"
            f"<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.phone_number}\n"
            f"<b>üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã:</b>\n{product_list}\n\n"
            f"<b>üíµ –û–±—â–∞—è —Å—É–º–º–∞:</b> {total_price}\n"
            f"<b>üìÖ –î–∞—Ç–∞:</b> {order.created_at.strftime('%Y-%m-%d %H:%M:%S')}\n"
            f"<b>üì¢ –°—Ç–∞—Ç—É—Å:</b> {order.status}"
        )

        telegram_url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            'chat_id': settings.TELEGRAM_CHAT_ID,
            'text': message,
            'parse_mode': 'HTML'
        }
        try:
            response = requests.post(telegram_url, json=payload)
            response.raise_for_status()
        except requests.RequestException as e:
            print(f"Failed to send Telegram message: {e}")

        return Response(OrderSerializer(order).data, status=201)

class UserOrdersAPI(generics.ListAPIView):
    serializer_class = OrderSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return Order.objects.filter(user=self.request.user)

    @swagger_auto_schema(
        operation_summary="–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        operation_description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ —Ç–µ–∫—É—â–µ–≥–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
        responses={
            200: openapi.Response(
                description="–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤",
                schema=openapi.Schema(
                    type=openapi.TYPE_ARRAY,
                    items=openapi.Schema(
                        type=openapi.TYPE_OBJECT,
                        properties={
                            "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –∑–∞–∫–∞–∑–∞"),
                            "user": openapi.Schema(
                                type=openapi.TYPE_OBJECT,
                                properties={
                                    "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                    "email": openapi.Schema(type=openapi.TYPE_STRING, format="email", description="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                    "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                    "surname": openapi.Schema(type=openapi.TYPE_STRING, description="–§–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                    "phone_number": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                                    "avatar": openapi.Schema(type=openapi.TYPE_STRING, format="uri", description="URL –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                                }
                            ),
                            "products": openapi.Schema(
                                type=openapi.TYPE_ARRAY,
                                items=openapi.Schema(
                                    type=openapi.TYPE_OBJECT,
                                    properties={
                                        "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                        "title": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                        "description_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "description_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "description_en": openapi.Schema(type=openapi.TYPE_STRING, description="–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "instruction_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "instruction_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "instruction_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                        "price": openapi.Schema(type=openapi.TYPE_INTEGER, description="–¶–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                        "old_price": openapi.Schema(type=openapi.TYPE_INTEGER, nullable=True, description="–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å null)"),
                                        "category": openapi.Schema(
                                            type=openapi.TYPE_OBJECT,
                                            properties={
                                                "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                                "parent": openapi.Schema(
                                                    type=openapi.TYPE_OBJECT,
                                                    nullable=True,
                                                    properties={
                                                        "id": openapi.Schema(type=openapi.TYPE_INTEGER, description="ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                                        "parent": openapi.Schema(type=openapi.TYPE_OBJECT, nullable=True, description="–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                                                        "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ"),
                                                        "name_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                        "name_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                        "name_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
                                                    },
                                                    description="–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å null)"
                                                ),
                                                "name": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ"),
                                                "name_uz": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —É–∑–±–µ–∫—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                "name_ru": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"),
                                                "name_en": openapi.Schema(type=openapi.TYPE_STRING, description="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ")
                                            },
                                            description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
                                        ),
                                        "link": openapi.Schema(
                                            type=openapi.TYPE_ARRAY,
                                            items=openapi.Schema(type=openapi.TYPE_STRING),
                                            nullable=True,
                                            description="–°–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º)"
                                        ),
                                        "total": openapi.Schema(type=openapi.TYPE_INTEGER, description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–∞"),
                                        "new": openapi.Schema(type=openapi.TYPE_BOOLEAN, nullable=True, description="–Ø–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–æ–¥—É–∫—Ç –Ω–æ–≤—ã–º (–º–æ–∂–µ—Ç –±—ã—Ç—å null)")
                                    }
                                ),
                                description="–°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∑–∞–∫–∞–∑–µ"
                            ),
                            "created_at": openapi.Schema(type=openapi.TYPE_STRING, format="date-time", description="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞"),
                            "status": openapi.Schema(type=openapi.TYPE_STRING, description="–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞")
                        }
                    )
                )
            )
        }
    )
    def get(self, request, *args, **kwargs):
        return super().get(request, *args, **kwargs)